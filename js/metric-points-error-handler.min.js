/**
 * Metric Points Error Handler - Minified v1.0.0
 * Bulletproof error handling and remote reporting
 */
!function(){"use strict";const e={endpoint:"https://metricpoints.com/api/error-reports",maxRetries:3,retryDelay:5e3,maxErrorsPerSession:10,errorTypes:{TRACKER_INIT:"tracker_initialization",SESSION_REPLAY:"session_replay",PERFORMANCE:"performance_monitoring",NETWORK:"network_interception",STORAGE:"storage_monitoring",CONSOLE:"console_interception",DOM:"dom_monitoring",GENERAL:"general_error"}},t=[],n=0,r=0,o=!1;function i(e,t=null){try{window.console&&window.console.log&&console.log("[Metric Points Error Handler]",e,t)}catch(e){}}function a(e,t=null){try{window.console&&window.console.error&&console.error("[Metric Points Error Handler]",e,t)}catch(e){}}function s(e,t={}){try{const n={timestamp:new Date().toISOString(),url:window.location.href,userAgent:navigator.userAgent,errorType:t.type||e.errorTypes.GENERAL,message:e?.message||String(e),stack:e?.stack||null,context:t,sessionId:window.MetricPointsTracker?.getSessionData?.()?.sessionId||"unknown",trackerVersion:"2.0.0",pageTitle:document.title,viewport:{width:window.innerWidth||0,height:window.innerHeight||0},screen:{width:screen.width||0,height:screen.height||0},memory:window.performance?.memory?{used:Math.round(window.performance.memory.usedJSHeapSize/1024/1024),total:Math.round(window.performance.memory.totalJSHeapSize/1024/1024)}:null};return n}catch(e){return{timestamp:new Date().toISOString(),url:"unknown",errorType:e.errorTypes.GENERAL,message:"Error capturing error context",fallback:!0}}}function c(e,t={}){try{if(n>=e.maxErrorsPerSession)return;const r=s(e,t);t.push(r),n++,l(),i("Error queued for reporting",r)}catch(e){a("Failed to queue error",e)}}function l(){if(o||0===t.length)return;const e=Date.now(),n=e-r,i=1e4;if(n<i)return void setTimeout(l,i-n);u()}function u(){if(o||0===t.length)return;o=!0;const e=t.splice(0,t.length);try{const n={errors:e,sessionInfo:{sessionId:window.MetricPointsTracker?.getSessionData?.()?.sessionId||"unknown",timestamp:new Date().toISOString(),url:window.location.href,userAgent:navigator.userAgent},trackerInfo:{version:"2.0.0",environment:"production",source:"error_handler"}};window.fetch?f(n):h(n)}catch(e){a("Failed to prepare error report",e),o=!1}}function f(e){fetch(t.endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>{e.ok?(i("Error report sent successfully"),r=Date.now()):(a("Error report failed",e.status),t.unshift(...e.errors))}).catch(e=>{a("Error report network error",e),t.unshift(...e.errors)}).finally(()=>{o=!1})}function h(e){try{const t=new XMLHttpRequest;t.open("POST",t.endpoint,!0),t.setRequestHeader("Content-Type","application/json"),t.onload=function(){t.status>=200&&t.status<300?(i("Error report sent successfully"),r=Date.now()):(a("Error report failed",t.status),t.unshift(...e.errors)),o=!1},t.onerror=function(){a("Error report network error"),t.unshift(...e.errors),o=!1},t.ontimeout=function(){a("Error report timeout"),t.unshift(...e.errors),o=!1},t.timeout=1e4,t.send(JSON.stringify(e))}catch(e){a("Failed to send error report with XHR",e),t.unshift(...e.errors),o=!1}}function p(e,t={}){return function(...n){try{return e.apply(this,n)}catch(e){c(e,{type:t.type||e.errorTypes.GENERAL,function:e.name||"anonymous",args:n.length,context:t});return t.fallback!==undefined?t.fallback:t.returnType==="array"?[]:t.returnType==="object"?{}:void 0}}}}function d(e,t){t.forEach(t=>{window[e]&&window[e].prototype&&window[e].prototype[t]&&(window[e].prototype[t]=p(window[e].prototype[t],{type:e.errorTypes.GENERAL,class:e,method:t}))})}function v(){try{window.addEventListener("error",function(e){c(e.error||new Error(e.message),{type:e.errorTypes.GENERAL,source:"global_error",filename:e.filename,lineno:e.lineno,colno:e.colno})}),window.addEventListener("unhandledrejection",function(e){c(e.reason||new Error("Unhandled Promise Rejection"),{type:e.errorTypes.GENERAL,source:"unhandled_rejection"})}),window.console&&window.console.error&&(window.console.error=function(...e){try{window.console.error.apply(console,e);const t=e.join(" ");(t.includes("Metric Points")||t.includes("Error")||t.includes("TypeError")||t.includes("ReferenceError"))&&c(new Error(t),{type:e.errorTypes.CONSOLE,source:"console_error"})}catch(e){window.console.error.apply(console,e)}}),i("Global error monitoring setup complete")}catch(e){a("Failed to setup global error monitoring",e)}}function m(){try{const e={timestamp:new Date().toISOString(),url:window.location.href,userAgent:navigator.userAgent,trackerStatus:{exists:!!window.MetricPointsTracker,initialized:!!(window.MetricPointsTracker&&window.MetricPointsTracker.isStarted),config:!!window.MetricPointsConfig},browser:{localStorage:!!window.localStorage,sessionStorage:!!window.sessionStorage,performance:!!window.performance,fetch:!!window.fetch,xhr:!!window.XMLHttpRequest},errorQueue:{length:t.length,count:n}};return i("Health check completed",e),e}catch(e){return a("Health check failed",e),{error:"Health check failed"}}}window.MetricPointsErrorHandler={queueError:c,safeExecute:p,runHealthCheck:m,getErrorCount:()=>n,getQueueLength:()=>t.length,clearErrors:()=>{t=[],n=0}},v(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",m):m(),i("Metric Points Error Handler loaded successfully")}();
